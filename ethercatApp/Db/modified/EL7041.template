
# template generated by maketemplate.py 
# from XML files at ../xml
# for device EL7041 revision 0x180000 
# non-default pdo assignments: None
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate


record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}


record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):ENCSTATUSCOMPACT:COUNTERVALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Countervalue")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):ENCSTATUSCOMPACT:LATCHVALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Latchvalue")
  field("SCAN", "$(SCAN)")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__LATCHCVALID")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__LatchCvalid")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__LATCHEXTERNVALID")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Latchexternvalid")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:DONE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Setcounterdone")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__COUNTERUNDERFLOW")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Counterunderflow")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__COUNTEROVERFLOW")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Counteroverflow")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__EXTRAPOLATIONSTALL")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Extrapolationstall")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__STATUSOFINPUTA")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__StatusofinputA")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__STATUSOFINPUTB")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__StatusofinputB")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__STATUSOFINPUTC")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__StatusofinputC")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STATUS__STATUSOFEXTERNLATCH")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Statusofexternlatch")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:SSYNCERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__Syncerror")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):ENCSTATUSCOMPACT:STXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ENCStatuscompact.Status__TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__READYTOENABLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Readytoenable")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__READY")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Ready")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__WARNING")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Warning")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:SERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Error")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__MOVINGPOSITIVE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Movingpositive")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__MOVINGNEGATIVE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Movingnegative")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__TORQUEREDUCED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Torquereduced")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__DIGITALINPUT1")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Digitalinput1")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STATUS__DIGITALINPUT2")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Digitalinput2")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:SSYNCERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__Syncerror")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):STMSTATUS:STXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))STMStatus.Status__TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(longout, "$(DEVICE):ENCCONTROLCOMPACT:SETCOUNTERVALUE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))ENCControlcompact.Setcountervalue")
  field("OMSL", "supervisory")
}


record(longout, "$(DEVICE):STMVELOCITY:VELOCITY")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))STMVelocity.Velocity")
  field("OMSL", "supervisory")
}


record(bo, "$(DEVICE):ENCCONTROLCOMPACT:CONTROL__ENABLELATCHC")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))ENCControlcompact.Control__EnablelatchC")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


#record(bo, "$(DEVICE):ENCCONTROLCOMPACT:CONTROL__ENABLELATCHEXTERNONPOSITIVEEDGE")
#{
#  field("DTYP", "asynInt32")
#  field("OUT",  "@asyn($(PORT))ENCControlcompact.Control__Enablelatchexternonpositiveedge")
#  field("OMSL", "supervisory")
#  field("ZNAM", "OFF")
#  field("ONAM", "ON")
#}


record(bo, "$(DEVICE):ENCCONTROLCOMPACT:CONTROL__SETCOUNTER")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))ENCControlcompact.Control__Setcounter")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


#record(bo, "$(DEVICE):ENCCONTROLCOMPACT:CONTROL__ENABLELATCHEXTERNONNEGATIVEEDGE")
#{
#  field("DTYP", "asynInt32")
#  field("OUT",  "@asyn($(PORT))ENCControlcompact.Control__Enablelatchexternonnegativeedge")
#  field("OMSL", "supervisory")
#  field("ZNAM", "OFF")
#  field("ONAM", "ON")
#}


record(bo, "$(DEVICE):STMCONTROL:CONTROL__ENABLE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))STMControl.Control__Enable")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):STMCONTROL:CONTROL__RESET")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))STMControl.Control__Reset")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):STMCONTROL:CONTROL__REDUCETORQUE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))STMControl.Control__Reducetorque")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


#MaximalCurrent
record(longin, "$(DEVICE):MaximalCurrent_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)MaximalCurrent")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):MaximalCurrent_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)MaximalCurrent_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):MaximalCurrent_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MaximalCurrent_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):MaximalCurrent") {
	field(DESC, "MaximalCurrent")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MaximalCurrent")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "1500")
	field(FLNK, "$(DEVICE):MaximalCurrent_trig")
}
#ReducedCurrent
record(longin, "$(DEVICE):ReducedCurrent_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)ReducedCurrent")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):ReducedCurrent_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)ReducedCurrent_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):ReducedCurrent_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)ReducedCurrent_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):ReducedCurrent") {
	field(DESC, "ReducedCurrent")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)ReducedCurrent")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "500")
	field(FLNK, "$(DEVICE):ReducedCurrent_trig")
}
#NominalVoltage
record(longin, "$(DEVICE):NominalVoltage_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)NominalVoltage")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):NominalVoltage_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)NominalVoltage_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):NominalVoltage_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)NominalVoltage_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):NominalVoltage") {
	field(DESC, "NominalVoltage")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)NominalVoltage")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "24000")
	field(FLNK, "$(DEVICE):NominalVoltage_trig")
}
#MotorCoilResistance
record(longin, "$(DEVICE):MotorCoilResistance_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)MotorCoilResistance")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):MotorCoilResistance_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)MotorCoilResistance_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):MotorCoilResistance_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorCoilResistance_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):MotorCoilResistance") {
	field(DESC, "MotorCoilResistance")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorCoilResistance")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "100")
	field(FLNK, "$(DEVICE):MotorCoilResistance_trig")
}
#MotorEMF
record(longin, "$(DEVICE):MotorEMF_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)MotorEMF")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):MotorEMF_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)MotorEMF_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):MotorEMF_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorEMF_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):MotorEMF") {
	field(DESC, "MotorEMF")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorEMF")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):MotorEMF_trig")
}
#MotorFullsteps
record(longin, "$(DEVICE):MotorFullsteps_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)MotorFullsteps")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):MotorFullsteps_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)MotorFullsteps_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):MotorFullsteps_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorFullsteps_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(longout, "$(DEVICE):MotorFullsteps") {
	field(DESC, "MotorFullsteps")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)MotorFullsteps")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "200")
	field(FLNK, "$(DEVICE):MotorFullsteps_trig")
}
#OperationMode
record(longin, "$(DEVICE):OperationMode_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)OperationMode")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):OperationMode_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)OperationMode_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):OperationMode_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)OperationMode_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):OperationMode") {
	field(DESC, "OperationMode")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"2")
    field(SHFT,"0")
    field(ZRST, "Automatic")
	field(ONST, "Direct velocity (default)")
	field(TWST, "Velocity controller")
	field(THST, "Position controller")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(TWVL,"0x02")
	field(THVL,"0x03")
	field(OUT, "@asyn($(PORT)_SDO)OperationMode")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "1")
	field(FLNK, "$(DEVICE):OperationMode_trig")
}
#SpeedRange
record(longin, "$(DEVICE):SpeedRange_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)SpeedRange")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):SpeedRange_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)SpeedRange_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):SpeedRange_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)SpeedRange_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):SpeedRange") {
	field(DESC, "SpeedRange")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"2")
    field(SHFT,"0")
    field(ZRST, "1000 full steps-sec")
	field(ONST, "2000 full steps-sec (def)")
	field(TWST, "4000 full steps-sec")
	field(THST, "8000 full steps-sec")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(TWVL,"0x02")
	field(THVL,"0x03")
	field(OUT, "@asyn($(PORT)_SDO)SpeedRange")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "1")
	field(FLNK, "$(DEVICE):SpeedRange_trig")
}
#FeedbackType
record(longin, "$(DEVICE):FeedbackType_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)FeedbackType")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):FeedbackType_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)FeedbackType_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):FeedbackType_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)FeedbackType_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):FeedbackType") {
	field(DESC, "FeedbackType")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "External encoder")
	field(ONST, "Internal counter")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)FeedbackType")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):FeedbackType_trig")
}
#InvertMotorPolarity
record(longin, "$(DEVICE):InvertMotorPolarity_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)InvertMotorPolarity")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):InvertMotorPolarity_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)InvertMotorPolarity_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):InvertMotorPolarity_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)InvertMotorPolarity_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):InvertMotorPolarity") {
	field(DESC, "InvertMotorPolarity")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "NO (default)")
	field(ONST, "YES")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)InvertMotorPolarity")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):InvertMotorPolarity_trig")
}
#InvertDigitalInput1
record(longin, "$(DEVICE):InvertDigitalInput1_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)InvertDigitalInput1")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):InvertDigitalInput1_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)InvertDigitalInput1_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):InvertDigitalInput1_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)InvertDigitalInput1_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):InvertDigitalInput1") {
	field(DESC, "InvertDigitalInput1")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "NO (default)")
	field(ONST, "YES")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)InvertDigitalInput1")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):InvertDigitalInput1_trig")
}
#InvertDigitalInput2
record(longin, "$(DEVICE):InvertDigitalInput2_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)InvertDigitalInput2")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):InvertDigitalInput2_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)InvertDigitalInput2_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):InvertDigitalInput2_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)InvertDigitalInput2_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):InvertDigitalInput2") {
	field(DESC, "InvertDigitalInput2")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "NO (default)")
	field(ONST, "YES")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)InvertDigitalInput2")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):InvertDigitalInput2_trig")
}
#FunctionInput1
record(longin, "$(DEVICE):FunctionInput1_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)FunctionInput1")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):FunctionInput1_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)FunctionInput1_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):FunctionInput1_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)FunctionInput1_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):FunctionInput1") {
	field(DESC, "FunctionInput1")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "Normal Input (default)")
	field(ONST, "Hardware Enable")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)FunctionInput1")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):FunctionInput1_trig")
}
#FunctionInput2
record(longin, "$(DEVICE):FunctionInput2_rbv") {
	field(DTYP, "asynInt32")
    field(INP, "@asyn($(PORT)_SDO)FunctionInput2")
	field(SCAN, "I/O Intr")
 }
 
record(longin, "$(DEVICE):FunctionInput2_stat")
 {
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PORT)_SDO)FunctionInput2_stat")
	field(SCAN, "I/O Intr")
 }
 record(longout, "$(DEVICE):FunctionInput2_trig") {
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PORT)_SDO)FunctionInput2_trig")
	field(SCAN, "1 second")
	field(PINI, "YES")
}
record(mbbo, "$(DEVICE):FunctionInput2") {
	field(DESC, "FunctionInput2")
	field(OMSL, "supervisory")
	field(DTYP, "asynInt32")
	field(NOBT,"1")
    field(SHFT,"0")
    field(ZRST, "Normal Input (default)")
	field(ONST, "Hardware Enable")
	field(ZRVL,"0x00")
	field(ONVL,"0x01")
	field(OUT, "@asyn($(PORT)_SDO)FunctionInput2")
	field(SCAN, "Passive")
	info(autosaveFields_pass0, "VAL")
	field(PINI,"YES")
	field(VAL, "0")
	field(FLNK, "$(DEVICE):FunctionInput2_trig")
}
